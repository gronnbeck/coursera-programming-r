}
length(cases)
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files <- list.files(path = directory)[id]
cases <- 0
for (f in files) {
path <- paste(directory, f, sep= '/')
data <- read.csv(path)
cols <- data[2:3]
lols <- cor(cols, use = "pairwise.complete.obs")
cases <- cor(c(cases, lols))
}
length(cases)
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files <- list.files(path = directory)[id]
cases <- c()
for (f in files) {
path <- paste(directory, f, sep= '/')
data <- read.csv(path)
cols <- data[2:3]
lols <- cor(cols, use = "pairwise.complete.obs")
cases <- cor(data.frame(cases, lols))
}
length(cases)
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files <- list.files(path = directory)[id]
cases <- c()
for (f in files) {
path <- paste(directory, f, sep= '/')
data <- read.csv(path)
cols <- data[2:3]
lols <- cor(cols, use = "pairwise.complete.obs")
cases <- cor(data.frame(cases, lols))
}
length(cases)
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files <- list.files(path = directory)[id]
cases <- c()
for (f in files) {
path <- paste(directory, f, sep= '/')
data <- read.csv(path)
cols <- data[2:3]
lols <- cor(cols, use = "pairwise.complete.obs")
cases <- if (length(cases) == 0) {
lols
} else {
cor(data.frame(cases, lols))
}
}
length(cases)
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files <- list.files(path = directory)[id]
cases <- c()
for (f in files) {
path <- paste(directory, f, sep= '/')
data <- read.csv(path)
cols <- data[2:3]
lols <- cor(cols, use = "pairwise.complete.obs")
print(lols)
}
0
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files <- list.files(path = directory)[id]
cors <- 0
for (f in files) {
path <- paste(directory, f, sep= '/')
data <- read.csv(path)
cols <- data[2:3]
lols <- cor(cols, use = "pairwise.complete.obs")
print(summary(lols))
}
0
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
print(head(a))
files <- list.files(path = directory)
cors <- 0
for (f in files) {
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
print(head(a)[head(a)$nobs > 100])
files <- list.files(path = directory)
cors <- 0
for (f in files) {
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
print(head(a)$nobs)
files <- list.files(path = directory)
cors <- 0
for (f in files) {
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
print(head(a)$nobs > threshold)
files <- list.files(path = directory)
cors <- 0
for (f in files) {
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
print(a[a$nobs > threshold])
files <- list.files(path = directory)
cors <- 0
for (f in files) {
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
print(a[a[, "nobs"] > threshold])
files <- list.files(path = directory)
cors <- 0
for (f in files) {
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
print(a[a[, "nobs"] > threshold,])
files <- list.files(path = directory)
cors <- 0
for (f in files) {
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
over <- a[a[, "nobs"] > threshold,]
print(over[,"id"])
files <- list.files(path = directory)
cors <- 0
for (f in files) {
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
over <- a[a[, "nobs"] > threshold,]
id <- over[,"id"]
files <- list.files(path = directory)[id]
cors <- 0
for (f in files) {
path <- paste(directory, f, sep= '/')
data <- read.csv(path)
cols <- data[2:3]
print(cor(data))
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
over <- a[a[, "nobs"] > threshold,]
id <- over[,"id"]
files <- list.files(path = directory)[id]
cors <- 0
for (f in files) {
path <- paste(directory, f, sep= '/')
data <- read.csv(path)
cols <- data[2:3]
print(cor(cols))
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
over <- a[a[, "nobs"] > threshold,]
id <- over[,"id"]
files <- list.files(path = directory)[id]
cors <- 0
for (f in files) {
path <- paste(directory, f, sep= '/')
data <- read.csv(path)
cols <- data[2:3]
print(cor(cols, use= "complete.obs"))
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
over <- a[a[, "nobs"] > threshold,]
id <- over[,"id"]
files <- list.files(path = directory)[id]
cors <- c()
for (f in files) {
path <- paste(directory, f, sep= '/')
data <- read.csv(path)
cols <- data[2:3]
print(cor(cols, use= "complete.obs")[0])
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
over <- a[a[, "nobs"] > threshold,]
id <- over[,"id"]
files <- list.files(path = directory)[id]
cors <- c()
for (f in files) {
path <- paste(directory, f, sep= '/')
data <- read.csv(path)
cols <- data[2:3]
print(cor(cols, use= "complete.obs")[,0])
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
over <- a[a[, "nobs"] > threshold,]
id <- over[,"id"]
files <- list.files(path = directory)[id]
cors <- c()
for (f in files) {
path <- paste(directory, f, sep= '/')
data <- read.csv(path)
cols <- data[2:3]
print(cor(cols, use= "complete.obs")[1,1])
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
over <- a[a[, "nobs"] > threshold,]
id <- over[,"id"]
files <- list.files(path = directory)[id]
cors <- c()
for (f in files) {
path <- paste(directory, f, sep= '/')
data <- read.csv(path)
cols <- data[2:3]
print(cor(cols, use= "complete.obs")[1,2])
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
over <- a[a[, "nobs"] > threshold,]
id <- over[,"id"]
files <- list.files(path = directory)[id]
cors <- c()
for (f in files) {
path <- paste(directory, f, sep= '/')
data <- read.csv(path)
cols <- data[2:3]
cors <- c(cors, cor(cols, use= "complete.obs")[1,2])
}
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
over <- a[a[, "nobs"] > threshold,]
id <- over[,"id"]
files <- list.files(path = directory)[id]
cors <- c()
for (f in files) {
path <- paste(directory, f, sep= '/')
data <- read.csv(path)
cols <- data[2:3]
cors <- c(cors, cor(cols, use= "complete.obs")[1,2])
}
cors
}
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
a <- complete(directory)
over <- a[a[, "nobs"] > threshold,]
id <- over[,"id"]
files <- list.files(path = directory)[id]
cors <- c()
for (f in files) {
path <- paste(directory, f, sep= '/')
data <- read.csv(path)
cols <- data[2:3]
cors <- c(cors, cor(cols, use= "complete.obs")[1,2])
}
cors
}
summary(corr("specdata", 150))
head(corr("specdata", 150))
submit()
submit()
submit()
library(datasets)
data(iris)
?iris
Sepal.length
Sepal.Length
iris
iris[iris$Species == "virginica"]
iris$Species
iris$Species == "virginica"
iris[,iris$Species == "virginica"]
iris[,1]
iris[1,]
iris["Species"]
subset(iris, Species == "virginica")
subset(iris, Species == "virginica")$Length
subset(iris, Species == "virginica")$Sepal.Length
mean(subset(iris, Species == "virginica")$Sepal.Length)
rowMeans(iris[, 1:4])
colMeans(iris)
apply(iris[, 1:4], 1, mean)
iris
apply(iris[, 1:4], 2, mean)
data(mtcars)
?mtcars
head(mtcars)
split(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$hp, mtcars$cyl)
sapply(split(mtcars$hp, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)[4]
sapply(split(mtcars$hp, mtcars$cyl), mean)$4
sapply(split(mtcars$hp, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)[1]
sapply(split(mtcars$hp, mtcars$cyl), mean)[1] - sapply(split(mtcars$hp, mtcars$cyl), mean)[2]
sapply(split(mtcars$hp, mtcars$cyl), mean)[1] - sapply(split(mtcars$hp, mtcars$cyl), mean)[3]
abs(sapply(split(mtcars$hp, mtcars$cyl), mean)[1] - sapply(split(mtcars$hp, mtcars$cyl), mean)[3])
debug(ls)
debug(ls)
ls
